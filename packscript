loadstring([[
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer

-- Limpa GUI antiga se existir
local oldGui = player:FindFirstChild("PlayerGui"):FindFirstChild("ModernGUI")
if oldGui then oldGui:Destroy() end

-- Estados globais
local noclipEnabled = false
local flyEnabled = false
local speedEnabled = false
local jumpEnabled = false -- Twentyjump
local flySpeed = 50
local walkSpeed = 16

-- Twentyjump configurações
local MAX_JUMPS = 100
local EXTRA_JUMP_POWER = 50
local COOLDOWN = 0.15
local jumps = 0
local lastJumpTime = 0

-- Cria GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ModernGUI"
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Ícone de hack
local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0,50,0,50)
toggleBtn.Position = UDim2.new(0,10,0,10)
toggleBtn.BackgroundColor3 = Color3.fromRGB(200,0,0)
toggleBtn.Text = "☠"
toggleBtn.TextScaled = true
toggleBtn.Font = Enum.Font.SourceSansBold
toggleBtn.TextColor3 = Color3.new(1,1,1)
toggleBtn.Parent = screenGui

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0,300,0,500)
mainFrame.Position = UDim2.new(0,70,0,10)
mainFrame.BackgroundColor3 = Color3.fromRGB(30,30,30)
mainFrame.BorderSizePixel = 0
mainFrame.Visible = false
mainFrame.Parent = screenGui

local layout = Instance.new("UIListLayout")
layout.Padding = UDim.new(0,5)
layout.FillDirection = Enum.FillDirection.Vertical
layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
layout.Parent = mainFrame

-- Toggle menu
toggleBtn.MouseButton1Click:Connect(function()
    mainFrame.Visible = not mainFrame.Visible
end)

-- Funções utilitárias
local function createButton(text, color, parent)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0,260,0,35)
    btn.Text = text
    btn.BackgroundColor3 = color
    btn.TextColor3 = Color3.new(1,1,1)
    btn.Font = Enum.Font.SourceSansBold
    btn.TextScaled = true
    btn.BorderSizePixel = 0
    btn.Parent = parent
    return btn
end

local function createSlider(labelText, min, max, default, parent, callback)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0,260,0,50)
    frame.BackgroundColor3 = Color3.fromRGB(50,50,50)
    frame.BorderSizePixel = 0
    frame.Visible = false
    frame.Parent = parent

    local label = Instance.new("TextLabel")
    label.Text = labelText..": "..default
    label.Size = UDim2.new(1,0,0,20)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.new(1,1,1)
    label.Font = Enum.Font.SourceSansBold
    label.TextScaled = true
    label.Parent = frame

    local slider = Instance.new("TextButton")
    slider.Size = UDim2.new(1,0,0,20)
    slider.Position = UDim2.new(0,0,0,25)
    slider.BackgroundColor3 = Color3.fromRGB(100,100,100)
    slider.BorderSizePixel = 0
    slider.Text = ""
    slider.Parent = frame

    local dragging = false
    slider.MouseButton1Down:Connect(function() dragging = true end)
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = false end
    end)

    RunService.RenderStepped:Connect(function()
        if dragging then
            local mouse = UserInputService:GetMouseLocation()
            local posX = math.clamp(mouse.X - slider.AbsolutePosition.X,0,slider.AbsoluteSize.X)
            local value = min + (posX / slider.AbsoluteSize.X) * (max-min)
            callback(value)
            label.Text = labelText..": "..math.floor(value)
        end
    end)
    return frame
end

-- Botões e sliders
local noclipBtn = createButton("Noclip OFF", Color3.fromRGB(255,0,0), mainFrame)
local tpBtn = createButton("TP", Color3.fromRGB(0,150,255), mainFrame)
local flyBtn = createButton("Fly OFF", Color3.fromRGB(0,0,255), mainFrame)
local flySlider = createSlider("FlySpeed", 10, 200, flySpeed, mainFrame, function(val) flySpeed = val end)
local speedBtn = createButton("Speed OFF", Color3.fromRGB(255,140,0), mainFrame)
local speedSlider = createSlider("WalkSpeed", 8, 100, walkSpeed, mainFrame, function(val) walkSpeed = val end)
local jumpBtn = createButton("Twentyjump OFF", Color3.fromRGB(200,0,200), mainFrame)

-- Lista de TP à direita
local tpFrame = Instance.new("ScrollingFrame")
tpFrame.Size = UDim2.new(0,200,0,400)
tpFrame.Position = UDim2.new(1,-210,0,50)
tpFrame.BackgroundColor3 = Color3.fromRGB(40,40,40)
tpFrame.BorderSizePixel = 0
tpFrame.Visible = true
tpFrame.Parent = screenGui

local tpLayout = Instance.new("UIListLayout")
tpLayout.Padding = UDim.new(0,3)
tpLayout.FillDirection = Enum.FillDirection.Vertical
tpLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
tpLayout.Parent = tpFrame

local function updateTPList()
    for _,child in pairs(tpFrame:GetChildren()) do
        if child:IsA("TextButton") then child:Destroy() end
    end
    local playersList = {}
    for _,pl in pairs(Players:GetPlayers()) do
        if pl ~= player then table.insert(playersList, pl) end
    end
    table.sort(playersList,function(a,b) return a.Name:lower()<b.Name:lower() end)
    for _,pl in ipairs(playersList) do
        local btn = createButton(pl.Name, Color3.fromRGB(0,200,0), tpFrame)
        btn.Size = UDim2.new(1,0,0,30)
        btn.TextScaled = true
        btn.MouseButton1Click:Connect(function()
            if pl.Character and pl.Character:FindFirstChild("HumanoidRootPart") and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                player.Character.HumanoidRootPart.CFrame = pl.Character.HumanoidRootPart.CFrame + Vector3.new(0,3,0)
            end
        end)
    end
    tpFrame.CanvasSize = UDim2.new(0,0,0,#playersList*35)
end

Players.PlayerAdded:Connect(updateTPList)
Players.PlayerRemoving:Connect(updateTPList)
updateTPList()
tpBtn.MouseButton1Click:Connect(function() tpFrame.Visible = not tpFrame.Visible end)

-- Configuração do personagem
local function setupCharacter(char)
    noclipEnabled = false
    flyEnabled = false
    speedEnabled = false
    jumpEnabled = false

    noclipBtn.Text = "Noclip OFF"
    flyBtn.Text = "Fly OFF"
    speedBtn.Text = "Speed OFF"
    jumpBtn.Text = "Twentyjump OFF"
    flySlider.Visible = false
    speedSlider.Visible = false
end

player.CharacterAdded:Connect(setupCharacter)
if player.Character then setupCharacter(player.Character) end

-- Eventos globais aplicando efeitos
RunService:BindToRenderStep("FlySpeedNoclip", Enum.RenderPriority.Character.Value, function()
    local char = player.Character
    if char then
        local hrp = char:FindFirstChild("HumanoidRootPart")
        local humanoid = char:FindFirstChildOfClass("Humanoid")

        -- Fly
        if hrp and flyEnabled then
            local move = Vector3.new()
            local camCF = workspace.CurrentCamera.CFrame
            if UserInputService:IsKeyDown(Enum.KeyCode.W) then move = move + camCF.LookVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.S) then move = move - camCF.LookVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.A) then move = move - camCF.RightVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.D) then move = move + camCF.RightVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.Space) then move = move + Vector3.new(0,1,0) end
            if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then move = move - Vector3.new(0,1,0) end
            if move.Magnitude>0 then hrp.Velocity = move.Unit*flySpeed hrp.Anchored=false end
        end

        -- Speed
        if humanoid then
            humanoid.WalkSpeed = speedEnabled and walkSpeed or 16
        end

        -- Noclip
        for _,part in pairs(char:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = not noclipEnabled
            end
        end
    end
end)

-- Botões
noclipBtn.MouseButton1Click:Connect(function()
    noclipEnabled = not noclipEnabled
    noclipBtn.Text = noclipEnabled and "Noclip ON" or "Noclip OFF"
end)

flyBtn.MouseButton1Click:Connect(function()
    flyEnabled = not flyEnabled
    flyBtn.Text = flyEnabled and "Fly ON" or "Fly OFF"
    flySlider.Visible = flyEnabled
    if flyEnabled then speedSlider.Visible = false end
end)

speedBtn.MouseButton1Click:Connect(function()
    speedEnabled = not speedEnabled
    speedBtn.Text = speedEnabled and "Speed ON" or "Speed OFF"
    speedSlider.Visible = speedEnabled
    if speedEnabled then flySlider.Visible = false end
end)

jumpBtn.MouseButton1Click:Connect(function()
    jumpEnabled = not jumpEnabled
    jumpBtn.Text = jumpEnabled and "Twentyjump ON" or "Twentyjump OFF"
end)

-- Twentyjump implementação
local function setupTwentyJump(character)
    local humanoid = character:WaitForChild("Humanoid",5)
    local hrp = character:WaitForChild("HumanoidRootPart",5)
    if not humanoid or not hrp then return end

    jumps = 0
    lastJumpTime = 0

    humanoid:GetPropertyChangedSignal("FloorMaterial"):Connect(function()
        if humanoid.FloorMaterial ~= Enum.Material.Air then
            jumps = 0
        end
    end)

    UserInputService.JumpRequest:Connect(function()
        if not jumpEnabled then return end
        local now = tick()
        if now - lastJumpTime < COOLDOWN then return end
        lastJumpTime = now

        if jumps < MAX_JUMPS then
            jumps = jumps + 1
            if jumps == 1 then
                humanoid.Jump = true
            else
                local vel = hrp.Velocity
                hrp.Velocity = Vector3.new(vel.X, EXTRA_JUMP_POWER, vel.Z)
                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end
    end)
end

player.CharacterAdded:Connect(setupTwentyJump)
if player.Character then setupTwentyJump(player.Character) end
]])()
